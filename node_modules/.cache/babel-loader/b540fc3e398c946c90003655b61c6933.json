{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenzi\\\\OneDrive - Keyin College\\\\Lessons\\\\Semester 2\\\\Final Sprint\\\\SafeSpace_Full\\\\safespace\\\\src\\\\components\\\\SignUpPage.jsx\",\n    _s = $RefreshSig$();\n\n// \t\tProject by: \tKara Balsom, Makenzie Roberts, & David Turner\n//\t\tDate Written: \tAugust 8, 2022\n//\t\tFile Name: \t\tTeam1_Sprint2.zip\n//\t\tGitHub URL: \thttps://github.com/MakenzieRoberts/Semester-2_Final-Sprint.git\nimport \"../stylesheets/signuppage.css\";\nimport Logo from \"./Logo\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpPage = () => {\n  _s();\n\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  }; //\t\tPass initialvalues to this state, then onChange update the formValues with user input.\n\n  const [formValues, setFormValues] = useState(initialValues); //   \tIn formErrors, setFormErrors we would be receiving props/values back from the handleSubmit\n  //\t\tfunction that calls the validate function.\n  //\t\tconst errors = {} in the validate function returns a value; , useState is set to an empty\n  //\t\tobject {} originally.\n\n  const [formErrors, setFormErrors] = useState({}); // \t\tSetting a flag to be used as boolean.\n\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const navigateToProfile = () => {\n    navigate(\"/signup/createprofile\");\n  };\n\n  const navigate = useNavigate(); //   \tThis function is triggered by onChange in the input element, to set the new values input by\n  //\t\tuser, using an \"e\" for add event.\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; //\t\tSet the form values(setFormValues) is an object ({}) so first take all the 'initialState'\n    //\t\tusing (...), so it will = the formValues.\n    //\t\t- [name] this in square brackets makes it a \"key\" and assign the entered value to this key.\n    //\t\t- Value is a key word to get the value of name.\n\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n    console.log(formValues);\n  };\n\n  const handleSubmit = e => {\n    // \t\te.prevent.Default; prevents the page from page from being refreshed.\n    e.preventDefault(); // \t\tWhenever a user submits a form the program is going to call the \"validate\" function that will\n    //\t\tpass all the formValues. Whichever occurs will be \"set\" in the formErrors which is an\n    //\t\tobject that was returned from the validate function ('return errors' to 'const errors={}')\n\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    // \t\t(If there are no form errors, and isSubmit is true)...\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      //\t\tThen navigate to the next page.\n      navigateToProfile();\n    } // eslint-disable-next-line\n\n  }, [formErrors]); //\t\tThe validate function.\n  //\t\tvalidate = (values), values is take all the form values which have be submitted.\n\n  const validate = values => {\n    // 'const errors' is an errors object which is the initial object.\n    const errors = {};\n    console.log(errors); // Email and password validation\n\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    const regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,16}$/i;\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (!regexPass.test(values.password)) {\n      errors.password = \"Password must contain 1 uppercase, lowercase, digit, special character and be between 8 to 12 characters \";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signuppage\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-border\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"E-mail\",\n            value: formValues.email // \t\tBelow, to update and handle the value passed in by a user, using\n            //\t\tonChange and making a function called 'handleChange'.\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-border\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\" //   \tChanged this from \"text\" to \"password\"\n            ,\n            type: \"password\",\n            placeholder: \"Password\" //   \tThis binds the initialValues to this input\n            ,\n            value: formValues.password // \t\tBelow, to update and handle the value passed in by a user, using\n            //\t\tonChange and making a function called 'handleChange'.\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-text\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"login-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"login\",\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SignUpPage, \"6ubXX1cwWlgJT9WRkmlZO+/q6bc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpPage;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["Logo","React","Link","useState","useEffect","useNavigate","SignUpPage","initialValues","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","navigateToProfile","navigate","handleChange","e","name","value","target","console","log","handleSubmit","preventDefault","validate","Object","keys","length","values","errors","regex","regexPass","test"],"sources":["C:/Users/Kenzi/OneDrive - Keyin College/Lessons/Semester 2/Final Sprint/SafeSpace_Full/safespace/src/components/SignUpPage.jsx"],"sourcesContent":["// \t\tProject by: \tKara Balsom, Makenzie Roberts, & David Turner\r\n//\t\tDate Written: \tAugust 8, 2022\r\n//\t\tFile Name: \t\tTeam1_Sprint2.zip\r\n//\t\tGitHub URL: \thttps://github.com/MakenzieRoberts/Semester-2_Final-Sprint.git\r\n\r\nimport \"../stylesheets/signuppage.css\";\r\nimport Logo from \"./Logo\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SignUpPage = () => {\r\n\tconst initialValues = { email: \"\", password: \"\" };\r\n\r\n\t//\t\tPass initialvalues to this state, then onChange update the formValues with user input.\r\n\tconst [formValues, setFormValues] = useState(initialValues);\r\n\r\n\t//   \tIn formErrors, setFormErrors we would be receiving props/values back from the handleSubmit\r\n\t//\t\tfunction that calls the validate function.\r\n\t//\t\tconst errors = {} in the validate function returns a value; , useState is set to an empty\r\n\t//\t\tobject {} originally.\r\n\tconst [formErrors, setFormErrors] = useState({});\r\n\r\n\t// \t\tSetting a flag to be used as boolean.\r\n\tconst [isSubmit, setIsSubmit] = useState(false);\r\n\r\n\tconst navigateToProfile = () => {\r\n\t\tnavigate(\"/signup/createprofile\");\r\n\t};\r\n\tconst navigate = useNavigate();\r\n\r\n\t//   \tThis function is triggered by onChange in the input element, to set the new values input by\r\n\t//\t\tuser, using an \"e\" for add event.\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\t//\t\tSet the form values(setFormValues) is an object ({}) so first take all the 'initialState'\r\n\t\t//\t\tusing (...), so it will = the formValues.\r\n\t\t//\t\t- [name] this in square brackets makes it a \"key\" and assign the entered value to this key.\r\n\t\t//\t\t- Value is a key word to get the value of name.\r\n\t\tsetFormValues({ ...formValues, [name]: value });\r\n\r\n\t\tconsole.log(formValues);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\t// \t\te.prevent.Default; prevents the page from page from being refreshed.\r\n\t\te.preventDefault();\r\n\r\n\t\t// \t\tWhenever a user submits a form the program is going to call the \"validate\" function that will\r\n\t\t//\t\tpass all the formValues. Whichever occurs will be \"set\" in the formErrors which is an\r\n\t\t//\t\tobject that was returned from the validate function ('return errors' to 'const errors={}')\r\n\t\tsetFormErrors(validate(formValues));\r\n\t\tsetIsSubmit(true);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// \t\t(If there are no form errors, and isSubmit is true)...\r\n\t\tif (Object.keys(formErrors).length === 0 && isSubmit) {\r\n\t\t\t//\t\tThen navigate to the next page.\r\n\t\t\tnavigateToProfile();\r\n\t\t} // eslint-disable-next-line\r\n\t}, [formErrors]);\r\n\r\n\t//\t\tThe validate function.\r\n\t//\t\tvalidate = (values), values is take all the form values which have be submitted.\r\n\tconst validate = (values) => {\r\n\t\t// 'const errors' is an errors object which is the initial object.\r\n\t\tconst errors = {};\r\n\t\tconsole.log(errors);\r\n\r\n\t\t// Email and password validation\r\n\t\tconst regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\t\tconst regexPass =\r\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,16}$/i;\r\n\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = \"Email is required!\";\r\n\t\t} else if (!regex.test(values.email)) {\r\n\t\t\terrors.email = \"This is not a valid email format\";\r\n\t\t}\r\n\r\n\t\tif (!values.password) {\r\n\t\t\terrors.password = \"Password is required\";\r\n\t\t} else if (!regexPass.test(values.password)) {\r\n\t\t\terrors.password =\r\n\t\t\t\t\"Password must contain 1 uppercase, lowercase, digit, special character and be between 8 to 12 characters \";\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"signuppage\">\r\n\t\t\t<Logo />\r\n\t\t\t{/*\t\tHere I wanted to see all the values so I used an onSubmit listener and called it \r\n\t\t\t\t\t'handleSubmit'\r\n\t\t\t*/}\r\n\t\t\t<form className=\"form\" onSubmit={handleSubmit}>\r\n\t\t\t\t<div id=\"form-title\">\r\n\t\t\t\t\t<h1>Sign Up</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inputs\">\r\n\t\t\t\t\t<div className=\"gradient-border\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"E-mail\"\r\n\t\t\t\t\t\t\tvalue={formValues.email}\r\n\t\t\t\t\t\t\t// \t\tBelow, to update and handle the value passed in by a user, using\r\n\t\t\t\t\t\t\t//\t\tonChange and making a function called 'handleChange'.\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\tIf an error occurs, the message shows up here inside <p>.\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t<p>{formErrors.email}</p>\r\n\t\t\t\t\t<div className=\"gradient-border\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t//   \tChanged this from \"text\" to \"password\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t//   \tThis binds the initialValues to this input\r\n\t\t\t\t\t\t\tvalue={formValues.password}\r\n\t\t\t\t\t\t\t// \t\tBelow, to update and handle the value passed in by a user, using\r\n\t\t\t\t\t\t\t//\t\tonChange and making a function called 'handleChange'.\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\tIf an error occurs, the message shows up here inside <p>.\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t<p>{formErrors.password}</p>\r\n\t\t\t\t\t<button className=\"button-text\">Sign Up</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"login-message\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tAlready have an account?{\" \"}\r\n\t\t\t\t\t\t<Link className=\"login\" to=\"/login\">\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignUpPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}