{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenzi\\\\OneDrive - Keyin College\\\\Lessons\\\\Semester 2\\\\Final Sprint\\\\SafeSpace_Full\\\\safespace\\\\src\\\\components\\\\ProfilePage.jsx\",\n    _s = $RefreshSig$();\n\n// \t\tProject by: \tKara Balsom, Makenzie Roberts, & David Turner\n//\t\tDate Written: \tAugust 8, 2022\n//\t\tFile Name: \t\tTeam1_Sprint2.zip\n//\t\tGitHub URL: \thttps://github.com/MakenzieRoberts/Semester-2_Final-Sprint.git\nimport \"../stylesheets/profilepage.css\";\nimport Logo from \"./Logo\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfilePage(_ref) {\n  _s();\n\n  let {\n    handleUserInfo\n  } = _ref;\n  const initialValues = {\n    username: \"\"\n  }; //\t\tPass initialvalues to this state, then onChange update the formValues with user input.\n\n  const [formValues, setFormValues] = useState(initialValues); //   \tIn formErrors, setFormErrors we would be receiving props/values back from the handleSubmit\n  //\t\tfunction that calls the validate function.\n  //\t\tconst errors = {} in the validate function returns a value; , useState is set to an empty\n  //\t\tobject {} originally.\n\n  const [formErrors, setFormErrors] = useState({}); // \t\tSetting a flag to be used as boolean.\n\n  const [isSubmit, setIsSubmit] = useState(false);\n  const navigate = useNavigate();\n\n  const navigateToFeed = () => {\n    navigate(\"/feed\");\n  }; //   \tThis function is triggered by onChange in the input element, to set the new values input by\n  //\t\tuser, using an \"e\" for add event.\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; //\t\tSet the form values(setFormValues) is an object ({}) so first take all the 'initialState'\n    //\t\tusing (...), so it will = the formValues.\n    //\t\t- [name] this in square brackets makes it a \"key\" and assign the entered value to this key.\n    //\t\t- Value is a key word to get the value of name.\n\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n    console.log(formValues);\n  };\n\n  const handleSubmit = e => {\n    // \t\te.prevent.Default; prevents the page from page from being refreshed.\n    e.preventDefault(); // \t\tWhenever a user submits a form the program is going to call the \"validate\" function that will\n    //\t\tpass all the formValues. Whichever occurs will be \"set\" in the formErrors which is an\n    //\t\tobject that was returned from the validate function ('return errors' to 'const errors={}')\n\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n    sendData(e);\n  };\n\n  useEffect(() => {\n    // \t\t(If there are no form errors, and isSubmit is true)...\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      //\t\tThen navigate to the next page.\n      navigateToFeed();\n    } // eslint-disable-next-line\n\n  }, [formErrors]); //\t\tThe validate function.\n  //\t\tvalidate = (values), values is take all the form values which have be submitted.\n\n  const validate = values => {\n    // 'const errors' is an errors object which is the initial object.\n    const errors = {};\n    console.log(errors); // Email and password validation\n\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n\n    return errors;\n  };\n\n  function sendData(e) {\n    var un = document.querySelector(\"#username\").value;\n    var pp = document.querySelector(\"#pronouns\").value;\n    var bb = document.querySelector(\"#bio\").value;\n    handleUserInfo(un, pp, bb);\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profilepage\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-border\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            placeholder: \"Username\",\n            value: formValues.username // \t\tBelow, to update and handle the value passed in by a user, using\n            //\t\tonChange and making a function called 'handleChange'.\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-border\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"pronouns\",\n            placeholder: \"Preferred Pronoun(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-border\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"bio\",\n            placeholder: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-text\",\n          children: \"Proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProfilePage, \"6ubXX1cwWlgJT9WRkmlZO+/q6bc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["Logo","useState","useEffect","useNavigate","ProfilePage","handleUserInfo","initialValues","username","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","navigate","navigateToFeed","handleChange","e","name","value","target","console","log","handleSubmit","preventDefault","validate","sendData","Object","keys","length","values","errors","un","document","querySelector","pp","bb"],"sources":["C:/Users/Kenzi/OneDrive - Keyin College/Lessons/Semester 2/Final Sprint/SafeSpace_Full/safespace/src/components/ProfilePage.jsx"],"sourcesContent":["// \t\tProject by: \tKara Balsom, Makenzie Roberts, & David Turner\r\n//\t\tDate Written: \tAugust 8, 2022\r\n//\t\tFile Name: \t\tTeam1_Sprint2.zip\r\n//\t\tGitHub URL: \thttps://github.com/MakenzieRoberts/Semester-2_Final-Sprint.git\r\n\r\nimport \"../stylesheets/profilepage.css\";\r\nimport Logo from \"./Logo\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ProfilePage({ handleUserInfo }) {\r\n\tconst initialValues = { username: \"\" };\r\n\r\n\t//\t\tPass initialvalues to this state, then onChange update the formValues with user input.\r\n\tconst [formValues, setFormValues] = useState(initialValues);\r\n\r\n\t//   \tIn formErrors, setFormErrors we would be receiving props/values back from the handleSubmit\r\n\t//\t\tfunction that calls the validate function.\r\n\t//\t\tconst errors = {} in the validate function returns a value; , useState is set to an empty\r\n\t//\t\tobject {} originally.\r\n\tconst [formErrors, setFormErrors] = useState({});\r\n\r\n\t// \t\tSetting a flag to be used as boolean.\r\n\tconst [isSubmit, setIsSubmit] = useState(false);\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst navigateToFeed = () => {\r\n\t\tnavigate(\"/feed\");\r\n\t};\r\n\r\n\t//   \tThis function is triggered by onChange in the input element, to set the new values input by\r\n\t//\t\tuser, using an \"e\" for add event.\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\t//\t\tSet the form values(setFormValues) is an object ({}) so first take all the 'initialState'\r\n\t\t//\t\tusing (...), so it will = the formValues.\r\n\t\t//\t\t- [name] this in square brackets makes it a \"key\" and assign the entered value to this key.\r\n\t\t//\t\t- Value is a key word to get the value of name.\r\n\t\tsetFormValues({ ...formValues, [name]: value });\r\n\r\n\t\tconsole.log(formValues);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\t// \t\te.prevent.Default; prevents the page from page from being refreshed.\r\n\t\te.preventDefault();\r\n\r\n\t\t// \t\tWhenever a user submits a form the program is going to call the \"validate\" function that will\r\n\t\t//\t\tpass all the formValues. Whichever occurs will be \"set\" in the formErrors which is an\r\n\t\t//\t\tobject that was returned from the validate function ('return errors' to 'const errors={}')\r\n\t\tsetFormErrors(validate(formValues));\r\n\t\tsetIsSubmit(true);\r\n\t\tsendData(e);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// \t\t(If there are no form errors, and isSubmit is true)...\r\n\t\tif (Object.keys(formErrors).length === 0 && isSubmit) {\r\n\t\t\t//\t\tThen navigate to the next page.\r\n\t\t\tnavigateToFeed();\r\n\t\t} // eslint-disable-next-line\r\n\t}, [formErrors]);\r\n\r\n\t//\t\tThe validate function.\r\n\t//\t\tvalidate = (values), values is take all the form values which have be submitted.\r\n\tconst validate = (values) => {\r\n\t\t// 'const errors' is an errors object which is the initial object.\r\n\t\tconst errors = {};\r\n\t\tconsole.log(errors);\r\n\r\n\t\t// Email and password validation\r\n\t\tif (!values.username) {\r\n\t\t\terrors.username = \"Username is required!\";\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tfunction sendData(e) {\r\n\t\tvar un = document.querySelector(\"#username\").value;\r\n\t\tvar pp = document.querySelector(\"#pronouns\").value;\r\n\t\tvar bb = document.querySelector(\"#bio\").value;\r\n\r\n\t\thandleUserInfo(un, pp, bb);\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"profilepage\">\r\n\t\t\t<Logo />\r\n\t\t\t{/*\t\tHere I wanted to see all the values so I used an onSubmit listener and called it \r\n\t\t\t\t\t'handleSubmit'\r\n\t\t\t*/}\r\n\t\t\t<form className=\"form\" onSubmit={handleSubmit}>\r\n\t\t\t\t<div id=\"form-title\">\r\n\t\t\t\t\t<h1>Create Profile</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inputs\">\r\n\t\t\t\t\t<div className=\"gradient-border\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\tvalue={formValues.username}\r\n\t\t\t\t\t\t\t// \t\tBelow, to update and handle the value passed in by a user, using\r\n\t\t\t\t\t\t\t//\t\tonChange and making a function called 'handleChange'.\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\tIf an error occurs, the message shows up here inside <p>.\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t<p>{formErrors.username}</p>\r\n\t\t\t\t\t<div className=\"gradient-border\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid=\"pronouns\"\r\n\t\t\t\t\t\t\tplaceholder=\"Preferred Pronoun(s)\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"gradient-border\">\r\n\t\t\t\t\t\t<textarea type=\"text\" id=\"bio\" placeholder=\"Bio\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button className=\"button-text\">Proceed</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}